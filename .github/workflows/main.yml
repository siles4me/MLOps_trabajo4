name: CI/CD Modelo ML y Despliegue Docker

on:
  push:
    branches:
      - main
      - staging
      - develop
      - 'feature/**' # Ejecuta en feature branches (pero no pushea imagen)
      - 'fix/**'     # Ejecuta en hotfix branches (pero no pushea imagen)
  pull_request:
    branches:
      - main
      - staging
      - develop
  workflow_dispatch:   # Para ejecución manual

jobs:
  train_build_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v4

      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Instalar dependencias de Python
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: (Re)entrenar el modelo
        run: python model/train_model.py 

      - name: Determinar Tag de Docker
        id: docker_meta
        run: |
          BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | sed 's/\//-/g')
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            TAG="latest"
          elif [[ "${{ github.ref }}" == "refs/heads/staging" ]]; then
            TAG="staging"
          elif [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
            TAG="develop"
          else
            TAG=${BRANCH_NAME:-$(echo $GITHUB_SHA | head -c7)}
          fi
          echo "DOCKER_TAG=${TAG}" >> $GITHUB_OUTPUT
          echo "Docker tag will be: $TAG"

      - name: Login a Docker Hub
        # Solo ejecutar en pushes a main, staging, o develop
        if: |
          github.event_name == 'push' &&
          (github.ref == 'refs/heads/main' ||
           github.ref == 'refs/heads/staging' ||
           github.ref == 'refs/heads/develop') &&
          secrets.DOCKERHUB_USERNAME != '' && 
          secrets.DOCKERHUB_TOKEN != ''
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Construir y empujar imagen Docker
        # Solo ejecutar en pushes a main, staging, o develop
        if: |
          github.event_name == 'push' &&
          (github.ref == 'refs/heads/main' ||
           github.ref == 'refs/heads/staging' ||
           github.ref == 'refs/heads/develop') &&
          secrets.DOCKERHUB_USERNAME != '' &&
          secrets.DOCKERHUB_TOKEN != ''
        uses: docker/build-push-action@v5
        with:
          context: . # Directorio raíz de tu repo donde está el Dockerfile
          file: ./Dockerfile
          push: true # Empujar la imagen a Docker Hub
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/iris-predictor:${{ steps.docker_meta.outputs.DOCKER_TAG }}
          # Ejemplo: siles4me/iris-predictor:latest, siles4me/iris-predictor:staging, etc.

      - name: Verificar ejecución de la acción (simulación)
        run: echo "El workflow de CI/CD se ejecutó para la rama/evento ${{ github.ref_name }} / ${{ github.event_name }}. Docker tag: ${{ steps.docker_meta.outputs.DOCKER_TAG }}. Push a Docker Hub: ${{ (github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/develop')) }}"