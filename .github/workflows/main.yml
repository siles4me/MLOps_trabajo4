name: CI/CD Modelo ML y Despliegue Docker

on:
  push:
    branches:
      - main
      - staging
      - develop
      - 'feature/**'
      - 'fix/**'
  pull_request:
    branches:
      - main
      - staging
      - develop
  workflow_dispatch:

jobs:
  train_build_push:
    runs-on: ubuntu-latest
    outputs:
      docker_image_pushed: ${{ steps.docker_build_push.outputs.pushed }}
      docker_tag: ${{ steps.docker_meta.outputs.DOCKER_TAG }}
    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v4

      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Instalar dependencias de Python
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: (Re)entrenar el modelo
        run: python model/train_model.py

      - name: Determinar Tag de Docker
        id: docker_meta
        run: |
          BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | sed 's/\//-/g')
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            TAG="latest"
          elif [[ "${{ github.ref }}" == "refs/heads/staging" ]]; then
            TAG="staging"
          elif [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
            TAG="develop"
          else
            TAG=${BRANCH_NAME:-$(echo $GITHUB_SHA | head -c7)}
          fi
          echo "DOCKER_TAG=${TAG}" >> $GITHUB_OUTPUT
          echo "Docker tag will be: $TAG"

      - name: Login a Docker Hub
        id: docker_login # Darle un ID para referenciar outputs si es necesario
        if: |
          github.event_name == 'push' &&
          (github.ref == 'refs/heads/main' ||
           github.ref == 'refs/heads/staging' ||
           github.ref == 'refs/heads/develop') &&
          secrets.DOCKERHUB_USERNAME != '' &&
          secrets.DOCKERHUB_TOKEN != ''
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Construir y empujar imagen Docker
        id: docker_build_push # Darle un ID para referenciar outputs
        if: |
          github.event_name == 'push' &&
          (github.ref == 'refs/heads/main' ||
           github.ref == 'refs/heads/staging' ||
           github.ref == 'refs/heads/develop') &&
          secrets.DOCKERHUB_USERNAME != '' &&
          secrets.DOCKERHUB_TOKEN != ''
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/iris-predictor:${{ steps.docker_meta.outputs.DOCKER_TAG }}
          # Agregamos outputs para saber si se empujó la imagen
          outputs: | 
            type=boolean,name=pushed

      - name: Verificar ejecución de la acción
        # Esta es la línea que podría ser la 86 o cercana
        run: |
          echo "Workflow ejecutado para: ${{ github.ref_name }} / ${{ github.event_name }}"
          echo "Tag de Docker determinado: ${{ steps.docker_meta.outputs.DOCKER_TAG }}"
          # Solo mostrar el mensaje de push si el paso anterior efectivamente empujó
          if [[ "${{ steps.docker_build_push.outputs.pushed }}" == "true" ]]; then
            echo "Imagen Docker empujada a Docker Hub: ${{ secrets.DOCKERHUB_USERNAME }}/iris-predictor:${{ steps.docker_meta.outputs.DOCKER_TAG }}"
          else
            echo "No se empujó imagen a Docker Hub en este flujo (ej. PR o feature branch)."
          fi